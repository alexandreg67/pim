services:
  client:
    build:
      context: ../../client
      dockerfile: Dockerfile
    container_name: pim_client
    ports:
      - '5173:5173'
    volumes:
      - ../../client/src:/app/src
      - ../../client/public:/app/public
    environment:
      - VITE_API_URL=http://localhost:4000
    networks:
      - pim_network

  api:
    build:
      context: ../../services/graphql-service
      dockerfile: Dockerfile
    container_name: pim_api
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=pim_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pim_network
    volumes:
      - ../../services/graphql-service/src:/app/src
      - ../../services/graphql-service/dist:/app/dist

  postgres:
    image: postgres:15-alpine
    container_name: pim_postgres
    environment:
      POSTGRES_DB: pim_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5435:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../storage/postgres/init/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql
      - ../../storage/postgres/init/02_import.sql:/docker-entrypoint-initdb.d/02_import.sql
      - ../../storage/postgres/data/products.csv:/docker-entrypoint-initdb.d/products.csv
    networks:
      - pim_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: pim_postgres_data

networks:
  pim_network:
    name: pim_network
    driver: bridge
