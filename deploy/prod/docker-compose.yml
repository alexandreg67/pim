version: '3.8'
services:
  client:
    image: alexandreg67/pim-client:latest
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/api
      - VITE_AUTH_URL=/auth
    restart: always
    networks:
      - pim_network
  api:
    image: alexandreg67/pim-api:latest
    restart: always
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DATABASE=${POSTGRES_DB}
      - AUTH_SERVICE_URL=http://auth:4001/auth
      - PORT=4000
    depends_on:
      - postgres
      - redis
    networks:
      - pim_network
  auth:
    image: alexandreg67/pim-auth:latest
    restart: always
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DATABASE=${POSTGRES_DB}
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - AUTH_SERVICE_PORT=4001
    depends_on:
      - postgres
    networks:
      - pim_network
  mail:
    image: alexandreg67/pim-mail:latest
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3002
    networks:
      - pim_network
  upload:
    image: alexandreg67/pim-upload:latest
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3003
      - AUTH_SERVICE_URL=http://auth:4001/auth
    volumes:
      - /opt/pim/storage/uploads:/storage/assets
    networks:
      - pim_network
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./storage/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - pim_network
  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - pim_network
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../ssl:/etc/nginx/ssl:ro # Mount SSL certificates
      - /opt/pim/storage/uploads:/storage/assets:ro
    depends_on:
      - client
      - api
      - auth
      - mail
      - upload
    networks:
      - pim_network
volumes:
  postgres_data:
  redis_data:
networks:
  pim_network:
    name: pim_network
    driver: bridge
