version: '3.8'
services:
  client:
    image: alexandreg67/pim-client:latest
    container_name: pim_client
    restart: always
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/api
      - VITE_AUTH_URL=/auth
      - VITE_ASSETS_URL=
    networks:
      - pim_network

  api:
    image: alexandreg67/pim-api:latest
    container_name: pim_api
    restart: always
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DATABASE=${POSTGRES_DB}
      - AUTH_SERVICE_URL=http://auth:4001/auth
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_DEFAULT_TTL=3600
      - PORT=4000
    depends_on:
      - postgres
      - redis
    networks:
      - pim_network

  auth:
    image: alexandreg67/pim-auth:latest
    container_name: pim_auth
    restart: always
    env_file:
      - .env.prod
    depends_on:
      - postgres
    networks:
      - pim_network

  mail:
    image: alexandreg67/pim-mail:latest
    container_name: pim_mail
    restart: always
    env_file:
      - .env.prod
    networks:
      - pim_network

  upload:
    image: alexandreg67/pim-upload:latest
    container_name: pim_upload
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3003
      - AUTH_SERVICE_URL=http://auth:4001/auth
    volumes:
      - /opt/pim/storage/uploads/images:/storage/assets/images
      - /opt/pim/storage/uploads/logos:/storage/assets/logos
    networks:
      - pim_network

  postgres:
    image: postgres:15-alpine
    container_name: pim_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./storage/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - pim_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: pim_redis
    restart: always
    volumes:
      - redis_data:/data
      - ./storage/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - pim_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: pim_nginx
    restart: always
    ports:
      - '8080:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/pim/storage/uploads/images:/storage/assets/images
      - /opt/pim/storage/uploads/logos:/storage/assets/logos
    depends_on:
      - client
      - api
      - auth
      - mail
      - upload
    networks:
      - pim_network

volumes:
  postgres_data:
    name: pim_postgres_data
  redis_data:
    name: pim_redis_data

networks:
  pim_network:
    name: pim_network
    driver: bridge
